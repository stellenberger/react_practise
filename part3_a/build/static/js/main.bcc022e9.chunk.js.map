{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","axios","get","then","response","data","newObject","post","id","put","Notification","message","className","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","length","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"sOAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,4BACE,4BAAKH,EAAKI,SACV,4BAAQC,QAASJ,GAAmBC,KCU3B,EAfA,WAEb,OADgBI,IAAMC,IAHR,cAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAAAC,GAEb,OADgBL,IAAMM,KARR,aAQsBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAbF,aAaE,YAAwBD,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCRrCK,G,MAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAe,OAAZA,EACM,KAIP,yBAAKC,UAAU,SACZD,KAsFQE,EAjFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,IAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAEGrB,MAAK,SAAAsB,GACJT,EAASS,QAEZ,IAEH,IAmBMC,EAAcP,EAClBJ,EACAA,EAAMY,QAAO,SAAAhC,GAAI,OAAIA,EAAKG,aAwB5B,OACE,6BACE,qCACA,kBAAC,EAAD,CAAca,QAASU,IACvB,6BACE,4BAAQrB,QAAS,kBAAMoB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAACjC,GAAD,OACf,kBAAC,EAAD,CAAMkC,IAAKlC,EAAKa,GAAIb,KAAMA,EAAMC,iBAAkB,kBAxD/B,SAACY,GAC1B,IAAMb,EAAOoB,EAAMe,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,KAAOA,KAChCwB,EAAW,2BAAQrC,GAAR,IAAcG,WAAYH,EAAKG,YAEhD0B,EACUhB,EAAIwB,GACX7B,MAAK,SAAA8B,GACJjB,EAASD,EAAMa,KAAI,SAAAjC,GAAI,OAAIA,EAAKa,KAAOA,EAAKb,EAAOsC,SAEpDC,OAAM,SAAAC,GACLb,EAAgB,aAAD,OAAc3B,EAAKI,QAAnB,0CACfqC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAI,GAAC,OAAIA,EAAEvB,KAAOA,SA0CsB6B,CAAmB1C,EAAKa,WAGpF,0BAAM8B,SA/BM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjB1C,QAASkB,EACTyB,MAAM,IAAIC,MAAOC,cACjB9C,UAAW+C,KAAKC,SAAW,GAC3BtC,GAAIO,EAAMgC,OAAS,GAGvBvB,EACUiB,GACPtC,MAAK,SAAA8B,GACJjB,EAASD,EAAMiC,OAAOf,IACtBf,EAAW,SAmBT,2BAAO+B,MAAOhC,EAASiC,SArCJ,SAACX,GACxBY,QAAQC,IAAIb,EAAMc,OAAOJ,OACzB/B,EAAWqB,EAAMc,OAAOJ,UAoCpB,4BAAQK,KAAK,UAAb,WCzFRC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,W","file":"static/js/main.bcc022e9.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? 'make not important' : 'make important'\n\n  return (\n    <ul>\n      <li>{note.content}</li>\n      <button onClick={toggleImportance}>{label}</button>\n    </ul>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default {\n  getAll,\n  create,\n  update\n}","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport './index.css'\n\n\nconst Notification = ({ message }) => {\n  if(message === null) {\n    return null\n  } \n\n  return (\n    <div className='error'>\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  \n  const toggleImportanceOf = (id) => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important}\n  \n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(`the note '${note.content}' was already deleted from the server`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n  \n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important)\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n      id: notes.length + 1\n    }\n\n  noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => \n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange}/>\n        <button type=\"submit\">Save</button>\n      </form>\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport axios from 'axios'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n\n\n\n\n\n\n\n"],"sourceRoot":""}